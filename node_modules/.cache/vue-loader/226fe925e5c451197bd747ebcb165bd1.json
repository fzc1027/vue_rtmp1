{"remainingRequest":"C:\\Users\\feng\\Desktop\\新建文件夹\\vue_rtmp1\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\feng\\Desktop\\新建文件夹\\vue_rtmp1\\src\\views\\Home.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\feng\\Desktop\\新建文件夹\\vue_rtmp1\\src\\views\\Home.vue","mtime":1604576580819},{"path":"C:\\Users\\feng\\Desktop\\新建文件夹\\vue_rtmp1\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\feng\\Desktop\\新建文件夹\\vue_rtmp1\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\feng\\Desktop\\新建文件夹\\vue_rtmp1\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\feng\\Desktop\\新建文件夹\\vue_rtmp1\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\feng\\Desktop\\新建文件夹\\vue_rtmp1\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.el-header, .el-footer {\n    background-color: #FFFFFF;\n    color: #333;\n    text-align: left;\n    line-height: 35px;\n}\n\n.el-container{\n    height:100%;\n    padding:0;\n    margin:0;\n    width:98%;\n}\n\n.el-aside, .el-tabs {\n    background-color: #FFFFFF;\n    color: #333;\n    text-align: left;\n    line-height: 30px;\n    height:98%;\n    width:98%;\n}\n\nel-image{\n    background-color: #FFFFFF;\n    color: #333;\n    text-align: center;\n    line-height: 30px;\n    height:98%;\n    width:98%;\n}\n\n\n\n\n.el-main {\n    background-color: #FFFFFF;\n    color: #333;\n    text-align: center;\n    line-height: 35px;\n    width:100%;\n    height:98%;\n}\n\n\n\n\n.el-select .el-input {\n    width: 300px;\n\n}\n.input-with-select .el-input-group__prepend {\n    background-color: #fff;\n}\n\n",{"version":3,"sources":["Home.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyFA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;;AAEA;AACA;AACA;AACA","file":"Home.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n\r\n    <div style=\"height:100%;width:98%\">\r\n        <el-container >\r\n            <el-header> <span>Transcoding system display platform</span></el-header>\r\n        </el-container>\r\n\r\n        <el-container>\r\n            <el-header style=\"margin-top: 0px;height:98%;width:98%;\">\r\n                <div style=\"margin-top: 0px;\">\r\n                    <el-input placeholder=\"please input rtmp_address\" v-model=\"input1\" class=\"input-with-select\" >\r\n                        <el-select v-model=\"select\" slot=\"prepend\" placeholder=\"please select bit_rate\">\r\n                            <el-option label=\"resource\" value=\"0\"></el-option>\r\n                            <el-option label=\"360p\" value=\"1\"></el-option>\r\n                            <el-option label=\"720p\" value=\"2\"></el-option>\r\n                            <el-option label=\"1080p\" value=\"3\"></el-option>\r\n                        </el-select>\r\n                         <el-button slot=\"append\" icon=\"el-icon-search\" @click=\"getInputValue\"></el-button>\r\n                    </el-input>\r\n                </div>\r\n            </el-header>\r\n        </el-container>\r\n\r\n        <el-container style=\"height:450px\">\r\n            <el-header><span>Transcoding system display platform</span></el-header>\r\n            <el-container>\r\n                <el-main  >\r\n\r\n                    <video-player class=\"vjs-custom-skin\"\r\n                        ref=\"videoPlayer\"\r\n                        :options=\"playerOptions\"\r\n                        :playsinline=\"true\"\r\n                        customEventName=\"customstatechangedeventname\"\r\n                        @play=\"onPlayerPlay($event)\"\r\n                        @loadeddata=\"onPlayerLoadeddata($event)\"\r\n                        @playing=\"onPlayerPlaying($event)\"\r\n                        @pause=\"onPlayerPause($event)\"\r\n                        @ended=\"onPlayerEnded($event)\"\r\n                    >\r\n                    </video-player>\r\n                </el-main>\r\n                <el-aside style=\"width:30%\" >\r\n                    <el-tabs type=\"border-card\"  >\r\n                        <el-tab-pane label=\"audio\" style=\"border-collapse:separate; border-spacing:0px 0px;\">\r\n                            <span>\r\n                                <tr >startup delay: {{timegap}} ms</tr>\r\n                                <tr >downlink: {{downlink}} KB/s</tr>\r\n                                <tr >bindwidth: {{bindwidth}} Kbps</tr>\r\n                                <tr >latency: {{delay}} ms</tr>\r\n                                <tr >bitrate: 1562.45 kbps </tr>\r\n                                <div >index: 156</div>\r\n                                <div>pendingIndex: 157 </div>\r\n                                <tr >ratio: 1920×1080 </tr>\r\n                                <tr >download: 1843.25 kbps </tr>\r\n                                <tr >latency: 1854 ms </tr>\r\n                                <tr >droppedFPS: 0 % </tr>\r\n                                <tr >liveLatency: 1148 ms </tr>\r\n                            </span>\r\n                        </el-tab-pane>\r\n                        <el-tab-pane label=\"video\">\r\n                                <tr >delay: {{timegap}} ms</tr>\r\n                                <tr >bitrate: 1562.45 kbps </tr>\r\n                                <div >index: 156</div>\r\n                                <div>pendingIndex: 157 </div>\r\n                                <tr >ratio: 1920×1080 </tr>\r\n                                <tr >download: 1843.25 kbps </tr>\r\n                                <tr >latency: 1854 ms </tr>\r\n                                <tr >droppedFPS: 0 % </tr>\r\n                                <tr >liveLatency: 1148 ms </tr>\r\n                        </el-tab-pane>\r\n                        </el-tabs>\r\n                </el-aside>\r\n            </el-container>\r\n        </el-container>\r\n\r\n\r\n        <el-container style=\"height:300px\">\r\n            <el-main >\r\n            <img  src=\"../assets/piont.png\" style=\"height:95%;width:95%\">\r\n            </el-main>\r\n            <el-footer><span>Transcoding system display platform</span></el-footer>\r\n        </el-container>\r\n\r\n\r\n    </div>\r\n</template>\r\n\r\n    <style>\r\n\r\n        .el-header, .el-footer {\r\n            background-color: #FFFFFF;\r\n            color: #333;\r\n            text-align: left;\r\n            line-height: 35px;\r\n        }\r\n\r\n        .el-container{\r\n            height:100%;\r\n            padding:0;\r\n            margin:0;\r\n            width:98%;\r\n        }\r\n\r\n        .el-aside, .el-tabs {\r\n            background-color: #FFFFFF;\r\n            color: #333;\r\n            text-align: left;\r\n            line-height: 30px;\r\n            height:98%;\r\n            width:98%;\r\n        }\r\n\r\n        el-image{\r\n            background-color: #FFFFFF;\r\n            color: #333;\r\n            text-align: center;\r\n            line-height: 30px;\r\n            height:98%;\r\n            width:98%;\r\n        }\r\n\r\n\r\n\r\n\r\n        .el-main {\r\n            background-color: #FFFFFF;\r\n            color: #333;\r\n            text-align: center;\r\n            line-height: 35px;\r\n            width:100%;\r\n            height:98%;\r\n        }\r\n\r\n\r\n\r\n\r\n        .el-select .el-input {\r\n            width: 300px;\r\n\r\n        }\r\n        .input-with-select .el-input-group__prepend {\r\n            background-color: #fff;\r\n        }\r\n\r\n    </style>\r\n\r\n\r\n\r\n\r\n    <script>\r\n    import 'videojs-flash'\r\n    //import rplay from '@/views/rplay'\r\n        export default {\r\n         // components:{\r\n         //   'rplay':rplay\r\n         // },\r\n\r\n            data() {\r\n                return {\r\n                    input1: '',\r\n                    select: '',\r\n                    timebegin:'',\r\n                    timerecive:'',\r\n                    timegap:'',\r\n                    downlink:'',\r\n                    bindwidth:'',\r\n                    delay:'',\r\n                    flag:0,\r\n                    //play播放器参数设置\r\n                    playerOptions: {\r\n                        height: '340',\r\n                        width: '100%',\r\n                        sources: [ {\r\n                        type: 'rtmp/mp4',\r\n                        src: ''          //播放流地址，getInputValue函数用动态修改src地址\r\n                        } ],\r\n                        techOrder: ['flash'],\r\n                        autoplay: false, // 非自动播放\r\n                        // controls: true, // 控制条\r\n                        isVideo:true,//强制刷新使用\r\n                        // preload: 'auto', // 预加载\r\n                        // muted: true, // 消除所有音频\r\n                        // loop: false, // 循环播放\r\n                        // controlBar: {\r\n                        //         timeDivider: true,\r\n                        //         durationDisplay: true,\r\n                        //         remainingTimeDisplay: false,\r\n                        //         fullscreenToggle: true  //全屏按钮\r\n                        // }\r\n                    }\r\n                }\r\n            },\r\n\r\n            methods: {\r\n                //在搜索按钮处插入的函数\r\n                getInputValue(){\r\n\r\n                    //设法找到转换码率select的内容，读取select只能得到选项123，故switch修改一下\r\n                    switch (this.select) {\r\n                    case '0':\r\n                        this.bitrate='';\r\n                    break;\r\n                    case '1':\r\n                        this.bitrate='_360';\r\n                    break;\r\n                    case '2':\r\n                        this.bitrate='_720';\r\n                    break;\r\n                    case '3':\r\n                        this.bitrate='_1080';\r\n                    break;\r\n                    default:\r\n                        this.bitrate=''\r\n\r\n                    }\r\n                    this.url = this.input1+this.bitrate;  //拼接流地址\r\n\r\n                    this.playerOptions['sources'][0]['src'] =this.url; //动态更改流地址\r\n\r\n                    alert(this.url)  //显示流地址\r\n                },\r\n          //listen event\r\n      onPlayerPlay() {\r\n          this.timebegin = new Date();\r\n       console.log('player play!', this.timebegin)\r\n       this.flag=1;\r\n       this.measureBW((speed,ping,bindwidth)=>{\r\n            console.log(speed + \" KB/sec\");  //913 KB/sec\r\n            console.log(ping + \" ms\");  //913 KB/sec\r\n            console.log(bindwidth + \" kps\");  //913 KB/sec\r\n            this.downlink=speed;\r\n            this.bindwidth=bindwidth;\r\n            this.delay=ping;\r\n        },10)\r\n\r\n      },\r\n      onPlayerPause(player) {\r\n         console.log('player pause!', player)\r\n         this.flag=0;\r\n      },\r\n      onPlayerEnded(player) {\r\n         console.log('player end!', player)\r\n         this.flag=0;\r\n      },\r\n    onPlayerLoadeddata(data) {\r\n        this.timerecive = new Date();\r\n        this.timegap=this.timerecive-this.timebegin\r\n        console.log('player Loadeddata!', this.timerecive)\r\n        console.log('player gap!', this.timegap+'ms')\r\n        console.log('player data ' ,data)\r\n        console.log('是否在线',navigator.onLine)\r\n        console.log('网速',navigator.connection.downlink,'MB/s')\r\n    },\r\n    // onPlayerWaiting(player) {\r\n    //     console.log('player Waiting!', player)\r\n    //     this.flag=0;\r\n    // },\r\n    onPlayerPlaying(player) {\r\n        console.log('player Playing!', player);\r\n        console.log('是否在线',navigator.onLine)\r\n        console.log('网速',navigator.connection.downlink,'MB/s')\r\n    },\r\n    // onPlayerTimeupdate(player) {\r\n    //     console.log('player Timeupdate!', player.currentTime())\r\n    //     console.log('是否在线',navigator.onLine)\r\n    //     console.log('网速',navigator.connection.downlink,'MB/s')\r\n        // measureBW((speed,ping,bindwidth)=>{\r\n        //     console.log(speed + \" KB/sec\");  //913 KB/sec\r\n        //     console.log(ping + \" ms\");  //913 KB/sec\r\n        //     console.log(bindwidth + \" kps\");  //913 KB/sec\r\n        //     this.downlink=speed;\r\n        //     this.bindwidth=bindwidth;\r\n        //     this.delay=ping;\r\n        // },10)\r\n    // },\r\n\r\n    measureBW(fn,time) {\r\n    time = time || 1;\r\n    var startTime, endTime, fileSize;\r\n    var count = time ;\r\n    var _this = this;\r\n        function measureBWSimple () {\r\n            var xhr = new XMLHttpRequest();\r\n            xhr.onreadystatechange = () => {\r\n                if (xhr.readyState === 4 && xhr.status === 200) {\r\n                    if(!fileSize){\r\n                        fileSize = xhr.responseText.length;\r\n                    }\r\n                    count --;\r\n                    if(count<=0){\r\n                        endTime = Date.now();\r\n                        console.log(fileSize)\r\n                        var speed = fileSize * time  / ((endTime - startTime)/1000) / 1024;\r\n                        var bindwidth =speed*8\r\n                        var ping = (endTime - startTime) / time ;\r\n                        fn && fn(Math.floor(speed),Math.floor(ping),Math.floor(bindwidth));\r\n                    }\r\n                }\r\n            }\r\n            xhr.open(\"GET\", \"https://upload.wikimedia.org/wikipedia/commons/5/51/Google.png?\" + Math.random(), true);\r\n            xhr.send();\r\n        }\r\n    startTime = Date.now();\r\n    for(var x = time;x>0;x--){\r\n        measureBWSimple()\r\n    }\r\n    setTimeout(function(){\r\n\r\n        console.log(\"gduyagsdgaysdgyasdasdsa\",_this.flag)\r\n        if(_this.flag==1){\r\n        _this.measureBW(fn,10)\r\n        }\r\n    },1000)\r\n}\r\n\r\n\r\n    //   onPlayerCanplay(player) {\r\n    //      console.log('player Canplay!', player)\r\n    //   },\r\n    //             // or listen state event\r\n    //             playerStateChanged(playerCurrentState) {\r\n    //               console.log('player current update state', playerCurrentState)\r\n    //             },\r\n            // player is ready\r\n\r\n\r\n    }\r\n\r\n    }\r\n\r\n\r\n    </script>\r\n\r\n"]}]}